#!/usr/bin/env luvit

local Path = require('path')
local Fs = require('fs')
local Process = require('process')
local wget = require('../../curl').get
local unzip = require('../../balls').unzip

local function check(err)
  if err then
    debug(err)
    error(tostring(err))
  end
end

local function unpack(module, path, options, callback)
  if type(options) == 'function' then
    options = nil
    callback = options
  end
  if not options then options = { } end
  wget({
    url = module,
    parse = false,
  }, function (err, stream)
    if err then callback(err) ; return end
    unzip(stream, {
      path = path,
      strip = options.strip,
    }, function (err)
      stream:close()
      callback(err)
    end)
  end)
end

local function getUrl(name)
  return 'http://nodeload.github.com/dvv/luvit-' .. name .. '/zipball/master'
end

local function install(cwd)

  if not cwd then cwd = '.' end

  -- get dependencies for the current package
  local deps = { }
  local bins = { }
  local ok, info = pcall(require, Path.join(cwd, 'package'))
  if ok then
    deps = info.dependencies or { }
    bins = info.bin or { }
  end

  -- fulfil deps
  for name, url in pairs(deps) do

    local target = Path.join(cwd, 'modules', name)
    url = getUrl(name)

    unpack(url, target, { strip = 1 }, function (err)

      p('INSTALLED', name, err)
      if err then return end

      -- install this dependency dependencies
      install(target)

    end)

  end

end

-- install this module dependencies
install(process.cwd())
